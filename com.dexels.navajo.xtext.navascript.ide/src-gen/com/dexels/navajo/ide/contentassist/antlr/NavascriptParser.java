/*
 * generated by Xtext 2.24.0
 */
package com.dexels.navajo.ide.contentassist.antlr;

import com.dexels.navajo.ide.contentassist.antlr.internal.InternalNavascriptParser;
import com.dexels.navajo.services.NavascriptGrammarAccess;
import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class NavascriptParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(NavascriptGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, NavascriptGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getTopLevelStatementAccess().getStatementAlternatives_2_0(), "rule__TopLevelStatement__StatementAlternatives_2_0");
			builder.put(grammarAccess.getInnerBodyAccess().getStatementAlternatives_2_0(), "rule__InnerBody__StatementAlternatives_2_0");
			builder.put(grammarAccess.getDebugStatementAccess().getValueAlternatives_2_0(), "rule__DebugStatement__ValueAlternatives_2_0");
			builder.put(grammarAccess.getSynchronizedArgumentAccess().getAlternatives(), "rule__SynchronizedArgument__Alternatives");
			builder.put(grammarAccess.getSContextAccess().getAlternatives_1(), "rule__SContext__Alternatives_1");
			builder.put(grammarAccess.getSContextAccess().getAlternatives_2(), "rule__SContext__Alternatives_2");
			builder.put(grammarAccess.getSKeyAccess().getAlternatives_1(), "rule__SKey__Alternatives_1");
			builder.put(grammarAccess.getSTimeoutAccess().getAlternatives_1(), "rule__STimeout__Alternatives_1");
			builder.put(grammarAccess.getSBreakOnNoLockAccess().getAlternatives_1(), "rule__SBreakOnNoLock__Alternatives_1");
			builder.put(grammarAccess.getBreakParameterAccess().getAlternatives(), "rule__BreakParameter__Alternatives");
			builder.put(grammarAccess.getBreakParameterAccess().getAlternatives_0_1(), "rule__BreakParameter__Alternatives_0_1");
			builder.put(grammarAccess.getBreakParameterAccess().getAlternatives_1_1(), "rule__BreakParameter__Alternatives_1_1");
			builder.put(grammarAccess.getBreakParameterAccess().getAlternatives_2_1(), "rule__BreakParameter__Alternatives_2_1");
			builder.put(grammarAccess.getDefineAccess().getAlternatives_3(), "rule__Define__Alternatives_3");
			builder.put(grammarAccess.getCheckAccess().getAlternatives_7(), "rule__Check__Alternatives_7");
			builder.put(grammarAccess.getCheckAttributeAccess().getAlternatives(), "rule__CheckAttribute__Alternatives");
			builder.put(grammarAccess.getCheckAttributeAccess().getAlternatives_0_1_1(), "rule__CheckAttribute__Alternatives_0_1_1");
			builder.put(grammarAccess.getCheckAttributeAccess().getAlternatives_1_1(), "rule__CheckAttribute__Alternatives_1_1");
			builder.put(grammarAccess.getLoopAccess().getAlternatives_2(), "rule__Loop__Alternatives_2");
			builder.put(grammarAccess.getLoopAccess().getAlternatives_3_2(), "rule__Loop__Alternatives_3_2");
			builder.put(grammarAccess.getMessageAccess().getAlternatives_4(), "rule__Message__Alternatives_4");
			builder.put(grammarAccess.getMessageAccess().getAlternatives_4_0_1(), "rule__Message__Alternatives_4_0_1");
			builder.put(grammarAccess.getMessageAccess().getAlternatives_4_2_0(), "rule__Message__Alternatives_4_2_0");
			builder.put(grammarAccess.getMessageAccess().getAlternatives_4_2_2(), "rule__Message__Alternatives_4_2_2");
			builder.put(grammarAccess.getMessageArgumentAccess().getAlternatives(), "rule__MessageArgument__Alternatives");
			builder.put(grammarAccess.getMessageArgumentAccess().getAlternatives_0_1(), "rule__MessageArgument__Alternatives_0_1");
			builder.put(grammarAccess.getMessageArgumentAccess().getAlternatives_1_1(), "rule__MessageArgument__Alternatives_1_1");
			builder.put(grammarAccess.getMapAccess().getAlternatives_1(), "rule__Map__Alternatives_1");
			builder.put(grammarAccess.getMapAccess().getAlternatives_1_1_3(), "rule__Map__Alternatives_1_1_3");
			builder.put(grammarAccess.getMapAccess().getAlternatives_2(), "rule__Map__Alternatives_2");
			builder.put(grammarAccess.getMethodOrSetterAccess().getAlternatives(), "rule__MethodOrSetter__Alternatives");
			builder.put(grammarAccess.getSetterFieldAccess().getAlternatives_2(), "rule__SetterField__Alternatives_2");
			builder.put(grammarAccess.getSetterFieldAccess().getAlternatives_2_0_0(), "rule__SetterField__Alternatives_2_0_0");
			builder.put(grammarAccess.getMappedArrayFieldAccess().getAlternatives_2_2(), "rule__MappedArrayField__Alternatives_2_2");
			builder.put(grammarAccess.getMappedArrayMessageAccess().getMessageAlternatives_1_0(), "rule__MappedArrayMessage__MessageAlternatives_1_0");
			builder.put(grammarAccess.getMappedArrayMessageAccess().getAlternatives_2_2(), "rule__MappedArrayMessage__Alternatives_2_2");
			builder.put(grammarAccess.getKeyValueArgumentAccess().getKeyAlternatives_1_0(), "rule__KeyValueArgument__KeyAlternatives_1_0");
			builder.put(grammarAccess.getKeyValueArgumentAccess().getAlternatives_2(), "rule__KeyValueArgument__Alternatives_2");
			builder.put(grammarAccess.getVarAccess().getAlternatives_2(), "rule__Var__Alternatives_2");
			builder.put(grammarAccess.getVarAccess().getAlternatives_4(), "rule__Var__Alternatives_4");
			builder.put(grammarAccess.getVarAccess().getAlternatives_4_0_0(), "rule__Var__Alternatives_4_0_0");
			builder.put(grammarAccess.getVarArgumentAccess().getArgumentAlternatives_1_0(), "rule__VarArgument__ArgumentAlternatives_1_0");
			builder.put(grammarAccess.getVarTypeAccess().getAlternatives_2(), "rule__VarType__Alternatives_2");
			builder.put(grammarAccess.getVarTypeAccess().getTypeAlternatives_3_0(), "rule__VarType__TypeAlternatives_3_0");
			builder.put(grammarAccess.getVarModeAccess().getAlternatives_2(), "rule__VarMode__Alternatives_2");
			builder.put(grammarAccess.getPropertyAccess().getAlternatives_4(), "rule__Property__Alternatives_4");
			builder.put(grammarAccess.getPropertyAccess().getAlternatives_4_0_0_0(), "rule__Property__Alternatives_4_0_0_0");
			builder.put(grammarAccess.getOptionAccess().getAlternatives_2(), "rule__Option__Alternatives_2");
			builder.put(grammarAccess.getPropertyArgumentAccess().getAlternatives(), "rule__PropertyArgument__Alternatives");
			builder.put(grammarAccess.getLengthArgumentAccess().getAlternatives_1(), "rule__LengthArgument__Alternatives_1");
			builder.put(grammarAccess.getDirectionArgumentAccess().getAlternatives_1(), "rule__DirectionArgument__Alternatives_1");
			builder.put(grammarAccess.getDirectionArgumentAccess().getValueAlternatives_2_0(), "rule__DirectionArgument__ValueAlternatives_2_0");
			builder.put(grammarAccess.getDescriptionArgumentAccess().getAlternatives_1(), "rule__DescriptionArgument__Alternatives_1");
			builder.put(grammarAccess.getCardinalityArgumentAccess().getAlternatives_1(), "rule__CardinalityArgument__Alternatives_1");
			builder.put(grammarAccess.getCardinalityArgumentAccess().getValueAlternatives_2_0(), "rule__CardinalityArgument__ValueAlternatives_2_0");
			builder.put(grammarAccess.getTypeArgumentAccess().getAlternatives_1(), "rule__TypeArgument__Alternatives_1");
			builder.put(grammarAccess.getSubTypeArgumentAccess().getAlternatives_1(), "rule__SubTypeArgument__Alternatives_1");
			builder.put(grammarAccess.getConditionalExpressionsAccess().getAlternatives(), "rule__ConditionalExpressions__Alternatives");
			builder.put(grammarAccess.getBooleanExpressionAccess().getOpAlternatives_1_0_1_0(), "rule__BooleanExpression__OpAlternatives_1_0_1_0");
			builder.put(grammarAccess.getComparisonAccess().getOpAlternatives_1_0_1_0(), "rule__Comparison__OpAlternatives_1_0_1_0");
			builder.put(grammarAccess.getEqualsAccess().getOpAlternatives_1_0_1_0(), "rule__Equals__OpAlternatives_1_0_1_0");
			builder.put(grammarAccess.getAdditionAccess().getAlternatives_1_0(), "rule__Addition__Alternatives_1_0");
			builder.put(grammarAccess.getMultiplicationAccess().getOpAlternatives_1_0_1_0(), "rule__Multiplication__OpAlternatives_1_0_1_0");
			builder.put(grammarAccess.getPrefixedAccess().getAlternatives(), "rule__Prefixed__Alternatives");
			builder.put(grammarAccess.getAtomicAccess().getAlternatives(), "rule__Atomic__Alternatives");
			builder.put(grammarAccess.getAtomicAccess().getValueAlternatives_1_1_0(), "rule__Atomic__ValueAlternatives_1_1_0");
			builder.put(grammarAccess.getAtomicAccess().getValueAlternatives_3_1_0(), "rule__Atomic__ValueAlternatives_3_1_0");
			builder.put(grammarAccess.getForAllIdentifierAccess().getOpAlternatives_1_0(), "rule__ForAllIdentifier__OpAlternatives_1_0");
			builder.put(grammarAccess.getTmlIdentifierAccess().getTmlAlternatives_1_0(), "rule__TmlIdentifier__TmlAlternatives_1_0");
			builder.put(grammarAccess.getPropertyTypeAccess().getAlternatives(), "rule__PropertyType__Alternatives");
			builder.put(grammarAccess.getOPTION_TYPEAccess().getAlternatives(), "rule__OPTION_TYPE__Alternatives");
			builder.put(grammarAccess.getMessageTypeAccess().getAlternatives(), "rule__MessageType__Alternatives");
			builder.put(grammarAccess.getMessageModeAccess().getAlternatives(), "rule__MessageMode__Alternatives");
			builder.put(grammarAccess.getNavascriptAccess().getGroup(), "rule__Navascript__Group__0");
			builder.put(grammarAccess.getTopLevelStatementsAccess().getGroup(), "rule__TopLevelStatements__Group__0");
			builder.put(grammarAccess.getTopLevelStatementAccess().getGroup(), "rule__TopLevelStatement__Group__0");
			builder.put(grammarAccess.getTopLevelStatementAccess().getGroup_1(), "rule__TopLevelStatement__Group_1__0");
			builder.put(grammarAccess.getInnerBodyAccess().getGroup(), "rule__InnerBody__Group__0");
			builder.put(grammarAccess.getInnerBodyAccess().getGroup_1(), "rule__InnerBody__Group_1__0");
			builder.put(grammarAccess.getBlockStatementsAccess().getGroup(), "rule__BlockStatements__Group__0");
			builder.put(grammarAccess.getDebugStatementAccess().getGroup(), "rule__DebugStatement__Group__0");
			builder.put(grammarAccess.getSynchronizedAccess().getGroup(), "rule__Synchronized__Group__0");
			builder.put(grammarAccess.getSynchronizedArgumentsAccess().getGroup(), "rule__SynchronizedArguments__Group__0");
			builder.put(grammarAccess.getSynchronizedArgumentsAccess().getGroup_1(), "rule__SynchronizedArguments__Group_1__0");
			builder.put(grammarAccess.getSynchronizedArgumentAccess().getGroup_0(), "rule__SynchronizedArgument__Group_0__0");
			builder.put(grammarAccess.getSContextAccess().getGroup(), "rule__SContext__Group__0");
			builder.put(grammarAccess.getSKeyAccess().getGroup(), "rule__SKey__Group__0");
			builder.put(grammarAccess.getSTimeoutAccess().getGroup(), "rule__STimeout__Group__0");
			builder.put(grammarAccess.getSBreakOnNoLockAccess().getGroup(), "rule__SBreakOnNoLock__Group__0");
			builder.put(grammarAccess.getBreakAccess().getGroup(), "rule__Break__Group__0");
			builder.put(grammarAccess.getBreakAccess().getGroup_2(), "rule__Break__Group_2__0");
			builder.put(grammarAccess.getBreakParameterAccess().getGroup_0(), "rule__BreakParameter__Group_0__0");
			builder.put(grammarAccess.getBreakParameterAccess().getGroup_1(), "rule__BreakParameter__Group_1__0");
			builder.put(grammarAccess.getBreakParameterAccess().getGroup_2(), "rule__BreakParameter__Group_2__0");
			builder.put(grammarAccess.getBreakParametersAccess().getGroup(), "rule__BreakParameters__Group__0");
			builder.put(grammarAccess.getBreakParametersAccess().getGroup_1(), "rule__BreakParameters__Group_1__0");
			builder.put(grammarAccess.getValidationsAccess().getGroup(), "rule__Validations__Group__0");
			builder.put(grammarAccess.getDefineAccess().getGroup(), "rule__Define__Group__0");
			builder.put(grammarAccess.getCheckAccess().getGroup(), "rule__Check__Group__0");
			builder.put(grammarAccess.getCheckAccess().getGroup_1(), "rule__Check__Group_1__0");
			builder.put(grammarAccess.getCheckAccess().getGroup_5(), "rule__Check__Group_5__0");
			builder.put(grammarAccess.getCheckAttributeAccess().getGroup_0(), "rule__CheckAttribute__Group_0__0");
			builder.put(grammarAccess.getCheckAttributeAccess().getGroup_0_1(), "rule__CheckAttribute__Group_0_1__0");
			builder.put(grammarAccess.getCheckAttributeAccess().getGroup_1(), "rule__CheckAttribute__Group_1__0");
			builder.put(grammarAccess.getLiteralOrExpressionAccess().getGroup(), "rule__LiteralOrExpression__Group__0");
			builder.put(grammarAccess.getPrintAccess().getGroup(), "rule__Print__Group__0");
			builder.put(grammarAccess.getLogAccess().getGroup(), "rule__Log__Group__0");
			builder.put(grammarAccess.getFinallyAccess().getGroup(), "rule__Finally__Group__0");
			builder.put(grammarAccess.getMethodsAccess().getGroup(), "rule__Methods__Group__0");
			builder.put(grammarAccess.getMethodAccess().getGroup(), "rule__Method__Group__0");
			builder.put(grammarAccess.getLoopAccess().getGroup(), "rule__Loop__Group__0");
			builder.put(grammarAccess.getLoopAccess().getGroup_3(), "rule__Loop__Group_3__0");
			builder.put(grammarAccess.getIncludeAccess().getGroup(), "rule__Include__Group__0");
			builder.put(grammarAccess.getAntiMessageAccess().getGroup(), "rule__AntiMessage__Group__0");
			builder.put(grammarAccess.getMessageAccess().getGroup(), "rule__Message__Group__0");
			builder.put(grammarAccess.getMessageAccess().getGroup_3(), "rule__Message__Group_3__0");
			builder.put(grammarAccess.getMessageAccess().getGroup_4_0(), "rule__Message__Group_4_0__0");
			builder.put(grammarAccess.getMessageAccess().getGroup_4_2(), "rule__Message__Group_4_2__0");
			builder.put(grammarAccess.getMessageArrayAccess().getGroup(), "rule__MessageArray__Group__0");
			builder.put(grammarAccess.getMessageArrayAccess().getGroup_1(), "rule__MessageArray__Group_1__0");
			builder.put(grammarAccess.getMessageArrayElementAccess().getGroup(), "rule__MessageArrayElement__Group__0");
			builder.put(grammarAccess.getMessageArgumentAccess().getGroup_0(), "rule__MessageArgument__Group_0__0");
			builder.put(grammarAccess.getMessageArgumentAccess().getGroup_1(), "rule__MessageArgument__Group_1__0");
			builder.put(grammarAccess.getMessageArgumentsAccess().getGroup(), "rule__MessageArguments__Group__0");
			builder.put(grammarAccess.getMessageArgumentsAccess().getGroup_1(), "rule__MessageArguments__Group_1__0");
			builder.put(grammarAccess.getMapAccess().getGroup(), "rule__Map__Group__0");
			builder.put(grammarAccess.getMapAccess().getGroup_1_0(), "rule__Map__Group_1_0__0");
			builder.put(grammarAccess.getMapAccess().getGroup_1_0_2(), "rule__Map__Group_1_0_2__0");
			builder.put(grammarAccess.getMapAccess().getGroup_1_1(), "rule__Map__Group_1_1__0");
			builder.put(grammarAccess.getMapAccess().getGroup_1_1_5(), "rule__Map__Group_1_1_5__0");
			builder.put(grammarAccess.getMapAccess().getGroup_2_1(), "rule__Map__Group_2_1__0");
			builder.put(grammarAccess.getAdapterMethodAccess().getGroup(), "rule__AdapterMethod__Group__0");
			builder.put(grammarAccess.getSetterFieldAccess().getGroup(), "rule__SetterField__Group__0");
			builder.put(grammarAccess.getSetterFieldAccess().getGroup_2_0(), "rule__SetterField__Group_2_0__0");
			builder.put(grammarAccess.getSetterFieldAccess().getGroup_2_1(), "rule__SetterField__Group_2_1__0");
			builder.put(grammarAccess.getSetterFieldAccess().getGroup_2_1_0(), "rule__SetterField__Group_2_1_0__0");
			builder.put(grammarAccess.getMappedMessageAccess().getGroup(), "rule__MappedMessage__Group__0");
			builder.put(grammarAccess.getMappedArrayFieldAccess().getGroup(), "rule__MappedArrayField__Group__0");
			builder.put(grammarAccess.getMappedArrayFieldAccess().getGroup_2(), "rule__MappedArrayField__Group_2__0");
			builder.put(grammarAccess.getMappedArrayMessageAccess().getGroup(), "rule__MappedArrayMessage__Group__0");
			builder.put(grammarAccess.getMappedArrayMessageAccess().getGroup_2(), "rule__MappedArrayMessage__Group_2__0");
			builder.put(grammarAccess.getKeyValueArgumentsAccess().getGroup(), "rule__KeyValueArguments__Group__0");
			builder.put(grammarAccess.getKeyValueArgumentsAccess().getGroup_2(), "rule__KeyValueArguments__Group_2__0");
			builder.put(grammarAccess.getKeyValueArgumentAccess().getGroup(), "rule__KeyValueArgument__Group__0");
			builder.put(grammarAccess.getVarAccess().getGroup(), "rule__Var__Group__0");
			builder.put(grammarAccess.getVarAccess().getGroup_2_1(), "rule__Var__Group_2_1__0");
			builder.put(grammarAccess.getVarAccess().getGroup_4_0(), "rule__Var__Group_4_0__0");
			builder.put(grammarAccess.getVarAccess().getGroup_4_1(), "rule__Var__Group_4_1__0");
			builder.put(grammarAccess.getVarAccess().getGroup_4_2(), "rule__Var__Group_4_2__0");
			builder.put(grammarAccess.getVarAccess().getGroup_4_3(), "rule__Var__Group_4_3__0");
			builder.put(grammarAccess.getVarAccess().getGroup_4_4(), "rule__Var__Group_4_4__0");
			builder.put(grammarAccess.getVarArrayAccess().getGroup(), "rule__VarArray__Group__0");
			builder.put(grammarAccess.getVarArrayAccess().getGroup_2(), "rule__VarArray__Group_2__0");
			builder.put(grammarAccess.getVarArrayElementAccess().getGroup(), "rule__VarArrayElement__Group__0");
			builder.put(grammarAccess.getVarElementAccess().getGroup(), "rule__VarElement__Group__0");
			builder.put(grammarAccess.getVarElementAccess().getGroup_1(), "rule__VarElement__Group_1__0");
			builder.put(grammarAccess.getVarArgumentsAccess().getGroup(), "rule__VarArguments__Group__0");
			builder.put(grammarAccess.getVarArgumentsAccess().getGroup_3(), "rule__VarArguments__Group_3__0");
			builder.put(grammarAccess.getVarArgumentAccess().getGroup(), "rule__VarArgument__Group__0");
			builder.put(grammarAccess.getVarTypeAccess().getGroup(), "rule__VarType__Group__0");
			builder.put(grammarAccess.getVarModeAccess().getGroup(), "rule__VarMode__Group__0");
			builder.put(grammarAccess.getPropertyAccess().getGroup(), "rule__Property__Group__0");
			builder.put(grammarAccess.getPropertyAccess().getGroup_4_0(), "rule__Property__Group_4_0__0");
			builder.put(grammarAccess.getPropertyAccess().getGroup_4_0_0(), "rule__Property__Group_4_0_0__0");
			builder.put(grammarAccess.getPropertyAccess().getGroup_4_1(), "rule__Property__Group_4_1__0");
			builder.put(grammarAccess.getPropertyAccess().getGroup_4_2(), "rule__Property__Group_4_2__0");
			builder.put(grammarAccess.getPropertyAccess().getGroup_4_3(), "rule__Property__Group_4_3__0");
			builder.put(grammarAccess.getSelectionArrayAccess().getGroup(), "rule__SelectionArray__Group__0");
			builder.put(grammarAccess.getSelectionArrayAccess().getGroup_1(), "rule__SelectionArray__Group_1__0");
			builder.put(grammarAccess.getSelectionArrayElementAccess().getGroup(), "rule__SelectionArrayElement__Group__0");
			builder.put(grammarAccess.getOptionAccess().getGroup(), "rule__Option__Group__0");
			builder.put(grammarAccess.getPropertyArgumentsAccess().getGroup(), "rule__PropertyArguments__Group__0");
			builder.put(grammarAccess.getPropertyArgumentsAccess().getGroup_3(), "rule__PropertyArguments__Group_3__0");
			builder.put(grammarAccess.getLengthArgumentAccess().getGroup(), "rule__LengthArgument__Group__0");
			builder.put(grammarAccess.getDirectionArgumentAccess().getGroup(), "rule__DirectionArgument__Group__0");
			builder.put(grammarAccess.getDescriptionArgumentAccess().getGroup(), "rule__DescriptionArgument__Group__0");
			builder.put(grammarAccess.getCardinalityArgumentAccess().getGroup(), "rule__CardinalityArgument__Group__0");
			builder.put(grammarAccess.getTypeArgumentAccess().getGroup(), "rule__TypeArgument__Group__0");
			builder.put(grammarAccess.getSubTypeArgumentAccess().getGroup(), "rule__SubTypeArgument__Group__0");
			builder.put(grammarAccess.getConditionalExpressionsAccess().getGroup_0(), "rule__ConditionalExpressions__Group_0__0");
			builder.put(grammarAccess.getConditionalExpressionAccess().getGroup(), "rule__ConditionalExpression__Group__0");
			builder.put(grammarAccess.getBooleanExpressionAccess().getGroup(), "rule__BooleanExpression__Group__0");
			builder.put(grammarAccess.getBooleanExpressionAccess().getGroup_1(), "rule__BooleanExpression__Group_1__0");
			builder.put(grammarAccess.getBooleanExpressionAccess().getGroup_1_0(), "rule__BooleanExpression__Group_1_0__0");
			builder.put(grammarAccess.getComparisonAccess().getGroup(), "rule__Comparison__Group__0");
			builder.put(grammarAccess.getComparisonAccess().getGroup_1(), "rule__Comparison__Group_1__0");
			builder.put(grammarAccess.getComparisonAccess().getGroup_1_0(), "rule__Comparison__Group_1_0__0");
			builder.put(grammarAccess.getEqualsAccess().getGroup(), "rule__Equals__Group__0");
			builder.put(grammarAccess.getEqualsAccess().getGroup_1(), "rule__Equals__Group_1__0");
			builder.put(grammarAccess.getEqualsAccess().getGroup_1_0(), "rule__Equals__Group_1_0__0");
			builder.put(grammarAccess.getAdditionAccess().getGroup(), "rule__Addition__Group__0");
			builder.put(grammarAccess.getAdditionAccess().getGroup_1(), "rule__Addition__Group_1__0");
			builder.put(grammarAccess.getAdditionAccess().getGroup_1_0_0(), "rule__Addition__Group_1_0_0__0");
			builder.put(grammarAccess.getAdditionAccess().getGroup_1_0_1(), "rule__Addition__Group_1_0_1__0");
			builder.put(grammarAccess.getMultiplicationAccess().getGroup(), "rule__Multiplication__Group__0");
			builder.put(grammarAccess.getMultiplicationAccess().getGroup_1(), "rule__Multiplication__Group_1__0");
			builder.put(grammarAccess.getMultiplicationAccess().getGroup_1_0(), "rule__Multiplication__Group_1_0__0");
			builder.put(grammarAccess.getPrefixedAccess().getGroup_0(), "rule__Prefixed__Group_0__0");
			builder.put(grammarAccess.getPrefixedAccess().getGroup_1(), "rule__Prefixed__Group_1__0");
			builder.put(grammarAccess.getAtomicAccess().getGroup_0(), "rule__Atomic__Group_0__0");
			builder.put(grammarAccess.getAtomicAccess().getGroup_1(), "rule__Atomic__Group_1__0");
			builder.put(grammarAccess.getAtomicAccess().getGroup_2(), "rule__Atomic__Group_2__0");
			builder.put(grammarAccess.getAtomicAccess().getGroup_3(), "rule__Atomic__Group_3__0");
			builder.put(grammarAccess.getAtomicAccess().getGroup_4(), "rule__Atomic__Group_4__0");
			builder.put(grammarAccess.getAtomicAccess().getGroup_5(), "rule__Atomic__Group_5__0");
			builder.put(grammarAccess.getAtomicAccess().getGroup_6(), "rule__Atomic__Group_6__0");
			builder.put(grammarAccess.getAtomicAccess().getGroup_7(), "rule__Atomic__Group_7__0");
			builder.put(grammarAccess.getAtomicAccess().getGroup_8(), "rule__Atomic__Group_8__0");
			builder.put(grammarAccess.getAtomicAccess().getGroup_9(), "rule__Atomic__Group_9__0");
			builder.put(grammarAccess.getAtomicAccess().getGroup_10(), "rule__Atomic__Group_10__0");
			builder.put(grammarAccess.getForAllIdentifierAccess().getGroup(), "rule__ForAllIdentifier__Group__0");
			builder.put(grammarAccess.getFunctionIdentifierAccess().getGroup(), "rule__FunctionIdentifier__Group__0");
			builder.put(grammarAccess.getFunctionIdentifierAccess().getGroup_2(), "rule__FunctionIdentifier__Group_2__0");
			builder.put(grammarAccess.getFunctionIdentifierAccess().getGroup_2_1(), "rule__FunctionIdentifier__Group_2_1__0");
			builder.put(grammarAccess.getFunctionIdentifierAccess().getGroup_2_1_1(), "rule__FunctionIdentifier__Group_2_1_1__0");
			builder.put(grammarAccess.getMappableIdentifierAccess().getGroup(), "rule__MappableIdentifier__Group__0");
			builder.put(grammarAccess.getMappableIdentifierAccess().getGroup_2(), "rule__MappableIdentifier__Group_2__0");
			builder.put(grammarAccess.getMappableIdentifierAccess().getGroup_2_1(), "rule__MappableIdentifier__Group_2_1__0");
			builder.put(grammarAccess.getMappableIdentifierAccess().getGroup_2_1_1(), "rule__MappableIdentifier__Group_2_1_1__0");
			builder.put(grammarAccess.getTmlIdentifierAccess().getGroup(), "rule__TmlIdentifier__Group__0");
			builder.put(grammarAccess.getPropertyTypeAccess().getGroup_0(), "rule__PropertyType__Group_0__0");
			builder.put(grammarAccess.getPropertyTypeAccess().getGroup_1(), "rule__PropertyType__Group_1__0");
			builder.put(grammarAccess.getPropertyTypeAccess().getGroup_2(), "rule__PropertyType__Group_2__0");
			builder.put(grammarAccess.getPropertyTypeAccess().getGroup_3(), "rule__PropertyType__Group_3__0");
			builder.put(grammarAccess.getPropertyTypeAccess().getGroup_4(), "rule__PropertyType__Group_4__0");
			builder.put(grammarAccess.getPropertyTypeAccess().getGroup_5(), "rule__PropertyType__Group_5__0");
			builder.put(grammarAccess.getPropertyTypeAccess().getGroup_6(), "rule__PropertyType__Group_6__0");
			builder.put(grammarAccess.getPropertyTypeAccess().getGroup_7(), "rule__PropertyType__Group_7__0");
			builder.put(grammarAccess.getPropertyTypeAccess().getGroup_8(), "rule__PropertyType__Group_8__0");
			builder.put(grammarAccess.getPropertyTypeAccess().getGroup_9(), "rule__PropertyType__Group_9__0");
			builder.put(grammarAccess.getPropertyTypeAccess().getGroup_10(), "rule__PropertyType__Group_10__0");
			builder.put(grammarAccess.getMessageTypeAccess().getGroup_0(), "rule__MessageType__Group_0__0");
			builder.put(grammarAccess.getMessageTypeAccess().getGroup_1(), "rule__MessageType__Group_1__0");
			builder.put(grammarAccess.getMessageTypeAccess().getGroup_2(), "rule__MessageType__Group_2__0");
			builder.put(grammarAccess.getMessageModeAccess().getGroup_0(), "rule__MessageMode__Group_0__0");
			builder.put(grammarAccess.getMessageModeAccess().getGroup_1(), "rule__MessageMode__Group_1__0");
			builder.put(grammarAccess.getNavascriptAccess().getDebugAssignment_1(), "rule__Navascript__DebugAssignment_1");
			builder.put(grammarAccess.getNavascriptAccess().getValidationsAssignment_2(), "rule__Navascript__ValidationsAssignment_2");
			builder.put(grammarAccess.getNavascriptAccess().getToplevelStatementsAssignment_3(), "rule__Navascript__ToplevelStatementsAssignment_3");
			builder.put(grammarAccess.getNavascriptAccess().getFinallyAssignment_4(), "rule__Navascript__FinallyAssignment_4");
			builder.put(grammarAccess.getTopLevelStatementsAccess().getStatementsAssignment_1(), "rule__TopLevelStatements__StatementsAssignment_1");
			builder.put(grammarAccess.getTopLevelStatementAccess().getConditionAssignment_1_1(), "rule__TopLevelStatement__ConditionAssignment_1_1");
			builder.put(grammarAccess.getTopLevelStatementAccess().getStatementAssignment_2(), "rule__TopLevelStatement__StatementAssignment_2");
			builder.put(grammarAccess.getInnerBodyAccess().getConditionAssignment_1_1(), "rule__InnerBody__ConditionAssignment_1_1");
			builder.put(grammarAccess.getInnerBodyAccess().getStatementAssignment_2(), "rule__InnerBody__StatementAssignment_2");
			builder.put(grammarAccess.getBlockStatementsAccess().getStatementsAssignment_2(), "rule__BlockStatements__StatementsAssignment_2");
			builder.put(grammarAccess.getDebugStatementAccess().getValueAssignment_2(), "rule__DebugStatement__ValueAssignment_2");
			builder.put(grammarAccess.getSynchronizedAccess().getArgumentsAssignment_2(), "rule__Synchronized__ArgumentsAssignment_2");
			builder.put(grammarAccess.getSynchronizedAccess().getStatementsAssignment_5(), "rule__Synchronized__StatementsAssignment_5");
			builder.put(grammarAccess.getSynchronizedArgumentsAccess().getArgumentsAssignment_0(), "rule__SynchronizedArguments__ArgumentsAssignment_0");
			builder.put(grammarAccess.getSynchronizedArgumentsAccess().getArgumentsAssignment_1_1(), "rule__SynchronizedArguments__ArgumentsAssignment_1_1");
			builder.put(grammarAccess.getBreakAccess().getParametersAssignment_2_1(), "rule__Break__ParametersAssignment_2_1");
			builder.put(grammarAccess.getBreakParameterAccess().getCodeAssignment_0_2(), "rule__BreakParameter__CodeAssignment_0_2");
			builder.put(grammarAccess.getBreakParameterAccess().getDescriptionAssignment_1_2(), "rule__BreakParameter__DescriptionAssignment_1_2");
			builder.put(grammarAccess.getBreakParametersAccess().getParametersAssignment_0(), "rule__BreakParameters__ParametersAssignment_0");
			builder.put(grammarAccess.getBreakParametersAccess().getParametersAssignment_1_1(), "rule__BreakParameters__ParametersAssignment_1_1");
			builder.put(grammarAccess.getValidationsAccess().getChecksAssignment_3(), "rule__Validations__ChecksAssignment_3");
			builder.put(grammarAccess.getDefineAccess().getDefineKeyAssignment_2(), "rule__Define__DefineKeyAssignment_2");
			builder.put(grammarAccess.getDefineAccess().getExpressionAssignment_4(), "rule__Define__ExpressionAssignment_4");
			builder.put(grammarAccess.getCheckAccess().getConditionAssignment_1_1(), "rule__Check__ConditionAssignment_1_1");
			builder.put(grammarAccess.getCheckAccess().getCheckAttributesAssignment_4(), "rule__Check__CheckAttributesAssignment_4");
			builder.put(grammarAccess.getCheckAccess().getCheckAttributesAssignment_5_1(), "rule__Check__CheckAttributesAssignment_5_1");
			builder.put(grammarAccess.getCheckAccess().getExpressionAssignment_8(), "rule__Check__ExpressionAssignment_8");
			builder.put(grammarAccess.getCheckAttributeAccess().getValueAssignment_0_1_2(), "rule__CheckAttribute__ValueAssignment_0_1_2");
			builder.put(grammarAccess.getCheckAttributeAccess().getValueAssignment_1_2(), "rule__CheckAttribute__ValueAssignment_1_2");
			builder.put(grammarAccess.getLiteralOrExpressionAccess().getExpressionAssignment_1(), "rule__LiteralOrExpression__ExpressionAssignment_1");
			builder.put(grammarAccess.getPrintAccess().getExpressionAssignment_3(), "rule__Print__ExpressionAssignment_3");
			builder.put(grammarAccess.getLogAccess().getExpressionAssignment_3(), "rule__Log__ExpressionAssignment_3");
			builder.put(grammarAccess.getFinallyAccess().getFinallyStatementsAssignment_3(), "rule__Finally__FinallyStatementsAssignment_3");
			builder.put(grammarAccess.getMethodsAccess().getMethodsAssignment_3(), "rule__Methods__MethodsAssignment_3");
			builder.put(grammarAccess.getMethodAccess().getMethodNameAssignment_1(), "rule__Method__MethodNameAssignment_1");
			builder.put(grammarAccess.getLoopAccess().getMappableAssignment_2_0(), "rule__Loop__MappableAssignment_2_0");
			builder.put(grammarAccess.getLoopAccess().getTmlAssignment_2_1(), "rule__Loop__TmlAssignment_2_1");
			builder.put(grammarAccess.getLoopAccess().getFilterAssignment_3_3(), "rule__Loop__FilterAssignment_3_3");
			builder.put(grammarAccess.getLoopAccess().getStatementsAssignment_5(), "rule__Loop__StatementsAssignment_5");
			builder.put(grammarAccess.getIncludeAccess().getScriptNameAssignment_2(), "rule__Include__ScriptNameAssignment_2");
			builder.put(grammarAccess.getAntiMessageAccess().getMessageNameAssignment_2(), "rule__AntiMessage__MessageNameAssignment_2");
			builder.put(grammarAccess.getMessageAccess().getMessageNameAssignment_2(), "rule__Message__MessageNameAssignment_2");
			builder.put(grammarAccess.getMessageAccess().getArgumentsAssignment_3_1(), "rule__Message__ArgumentsAssignment_3_1");
			builder.put(grammarAccess.getMessageAccess().getStatementsAssignment_4_0_1_0(), "rule__Message__StatementsAssignment_4_0_1_0");
			builder.put(grammarAccess.getMessageAccess().getArrayFieldAssignment_4_0_1_1(), "rule__Message__ArrayFieldAssignment_4_0_1_1");
			builder.put(grammarAccess.getMessageAccess().getArrayMessageAssignment_4_0_1_2(), "rule__Message__ArrayMessageAssignment_4_0_1_2");
			builder.put(grammarAccess.getMessageAccess().getMessageArrayAssignment_4_2_1(), "rule__Message__MessageArrayAssignment_4_2_1");
			builder.put(grammarAccess.getMessageArrayAccess().getArrayMessageElementsAssignment_0(), "rule__MessageArray__ArrayMessageElementsAssignment_0");
			builder.put(grammarAccess.getMessageArrayAccess().getArrayMessageElementsAssignment_1_1(), "rule__MessageArray__ArrayMessageElementsAssignment_1_1");
			builder.put(grammarAccess.getMessageArrayElementAccess().getStatementsAssignment_2(), "rule__MessageArrayElement__StatementsAssignment_2");
			builder.put(grammarAccess.getMessageArgumentsAccess().getArgumentsAssignment_0(), "rule__MessageArguments__ArgumentsAssignment_0");
			builder.put(grammarAccess.getMessageArgumentsAccess().getArgumentsAssignment_1_1(), "rule__MessageArguments__ArgumentsAssignment_1_1");
			builder.put(grammarAccess.getMapAccess().getAdapterNameAssignment_1_0_1(), "rule__Map__AdapterNameAssignment_1_0_1");
			builder.put(grammarAccess.getMapAccess().getArgumentsAssignment_1_0_2_1(), "rule__Map__ArgumentsAssignment_1_0_2_1");
			builder.put(grammarAccess.getMapAccess().getObjectNameAssignment_1_1_4(), "rule__Map__ObjectNameAssignment_1_1_4");
			builder.put(grammarAccess.getMapAccess().getArgumentsAssignment_1_1_5_1(), "rule__Map__ArgumentsAssignment_1_1_5_1");
			builder.put(grammarAccess.getMapAccess().getStatementsAssignment_2_1_1(), "rule__Map__StatementsAssignment_2_1_1");
			builder.put(grammarAccess.getAdapterMethodAccess().getMethodAssignment_1(), "rule__AdapterMethod__MethodAssignment_1");
			builder.put(grammarAccess.getAdapterMethodAccess().getArgumentsAssignment_3(), "rule__AdapterMethod__ArgumentsAssignment_3");
			builder.put(grammarAccess.getSetterFieldAccess().getFieldAssignment_1(), "rule__SetterField__FieldAssignment_1");
			builder.put(grammarAccess.getSetterFieldAccess().getExpressionListAssignment_2_0_1(), "rule__SetterField__ExpressionListAssignment_2_0_1");
			builder.put(grammarAccess.getSetterFieldAccess().getArgumentsAssignment_2_1_0_1(), "rule__SetterField__ArgumentsAssignment_2_1_0_1");
			builder.put(grammarAccess.getSetterFieldAccess().getMappedArrayAssignment_2_1_2(), "rule__SetterField__MappedArrayAssignment_2_1_2");
			builder.put(grammarAccess.getSetterFieldAccess().getMappedFieldAssignment_2_2(), "rule__SetterField__MappedFieldAssignment_2_2");
			builder.put(grammarAccess.getSetterFieldAccess().getMappedMessageAssignment_2_3(), "rule__SetterField__MappedMessageAssignment_2_3");
			builder.put(grammarAccess.getMappedMessageAccess().getStatementsAssignment_2(), "rule__MappedMessage__StatementsAssignment_2");
			builder.put(grammarAccess.getMappedArrayFieldAccess().getFieldAssignment_1(), "rule__MappedArrayField__FieldAssignment_1");
			builder.put(grammarAccess.getMappedArrayFieldAccess().getFilterAssignment_2_3(), "rule__MappedArrayField__FilterAssignment_2_3");
			builder.put(grammarAccess.getMappedArrayFieldAccess().getStatementsAssignment_4(), "rule__MappedArrayField__StatementsAssignment_4");
			builder.put(grammarAccess.getMappedArrayMessageAccess().getMessageAssignment_1(), "rule__MappedArrayMessage__MessageAssignment_1");
			builder.put(grammarAccess.getMappedArrayMessageAccess().getFilterAssignment_2_3(), "rule__MappedArrayMessage__FilterAssignment_2_3");
			builder.put(grammarAccess.getMappedArrayMessageAccess().getStatementsAssignment_4(), "rule__MappedArrayMessage__StatementsAssignment_4");
			builder.put(grammarAccess.getKeyValueArgumentsAccess().getKeyValueArgumentsAssignment_1(), "rule__KeyValueArguments__KeyValueArgumentsAssignment_1");
			builder.put(grammarAccess.getKeyValueArgumentsAccess().getKeyValueArgumentsAssignment_2_1(), "rule__KeyValueArguments__KeyValueArgumentsAssignment_2_1");
			builder.put(grammarAccess.getKeyValueArgumentAccess().getKeyAssignment_1(), "rule__KeyValueArgument__KeyAssignment_1");
			builder.put(grammarAccess.getKeyValueArgumentAccess().getValueAssignment_3(), "rule__KeyValueArgument__ValueAssignment_3");
			builder.put(grammarAccess.getVarAccess().getVarNameAssignment_2_0(), "rule__Var__VarNameAssignment_2_0");
			builder.put(grammarAccess.getVarAccess().getArgumentsAssignment_3(), "rule__Var__ArgumentsAssignment_3");
			builder.put(grammarAccess.getVarAccess().getExpressionListAssignment_4_0_1(), "rule__Var__ExpressionListAssignment_4_0_1");
			builder.put(grammarAccess.getVarAccess().getVarArrayAssignment_4_1_1(), "rule__Var__VarArrayAssignment_4_1_1");
			builder.put(grammarAccess.getVarAccess().getVarElementsAssignment_4_2_1(), "rule__Var__VarElementsAssignment_4_2_1");
			builder.put(grammarAccess.getVarAccess().getMappedArrayFieldAssignment_4_3_1(), "rule__Var__MappedArrayFieldAssignment_4_3_1");
			builder.put(grammarAccess.getVarAccess().getMappedArrayMessageAssignment_4_4_1(), "rule__Var__MappedArrayMessageAssignment_4_4_1");
			builder.put(grammarAccess.getVarArrayAccess().getVararrayelementAssignment_1(), "rule__VarArray__VararrayelementAssignment_1");
			builder.put(grammarAccess.getVarArrayAccess().getVararrayelementAssignment_2_1(), "rule__VarArray__VararrayelementAssignment_2_1");
			builder.put(grammarAccess.getVarArrayElementAccess().getVarElementsAssignment_2(), "rule__VarArrayElement__VarElementsAssignment_2");
			builder.put(grammarAccess.getVarElementAccess().getConditionAssignment_1_1(), "rule__VarElement__ConditionAssignment_1_1");
			builder.put(grammarAccess.getVarElementAccess().getVarAssignment_2(), "rule__VarElement__VarAssignment_2");
			builder.put(grammarAccess.getVarArgumentsAccess().getVarArgumentsAssignment_2(), "rule__VarArguments__VarArgumentsAssignment_2");
			builder.put(grammarAccess.getVarArgumentsAccess().getVarArgumentsAssignment_3_1(), "rule__VarArguments__VarArgumentsAssignment_3_1");
			builder.put(grammarAccess.getVarArgumentAccess().getArgumentAssignment_1(), "rule__VarArgument__ArgumentAssignment_1");
			builder.put(grammarAccess.getVarTypeAccess().getTypeAssignment_3(), "rule__VarType__TypeAssignment_3");
			builder.put(grammarAccess.getVarModeAccess().getModeAssignment_3(), "rule__VarMode__ModeAssignment_3");
			builder.put(grammarAccess.getPropertyAccess().getPropertyNameAssignment_2(), "rule__Property__PropertyNameAssignment_2");
			builder.put(grammarAccess.getPropertyAccess().getArgumentsAssignment_3(), "rule__Property__ArgumentsAssignment_3");
			builder.put(grammarAccess.getPropertyAccess().getExpressionListAssignment_4_0_0_1(), "rule__Property__ExpressionListAssignment_4_0_0_1");
			builder.put(grammarAccess.getPropertyAccess().getSelectionArrayAssignment_4_1_1(), "rule__Property__SelectionArrayAssignment_4_1_1");
			builder.put(grammarAccess.getPropertyAccess().getArrayFieldAssignment_4_2_1(), "rule__Property__ArrayFieldAssignment_4_2_1");
			builder.put(grammarAccess.getPropertyAccess().getArrayMessageAssignment_4_3_1(), "rule__Property__ArrayMessageAssignment_4_3_1");
			builder.put(grammarAccess.getSelectionArrayAccess().getArrayElementsAssignment_0(), "rule__SelectionArray__ArrayElementsAssignment_0");
			builder.put(grammarAccess.getSelectionArrayAccess().getArrayElementsAssignment_1_1(), "rule__SelectionArray__ArrayElementsAssignment_1_1");
			builder.put(grammarAccess.getSelectionArrayElementAccess().getInnerBodyAssignment_2(), "rule__SelectionArrayElement__InnerBodyAssignment_2");
			builder.put(grammarAccess.getOptionAccess().getOptionAssignment_1(), "rule__Option__OptionAssignment_1");
			builder.put(grammarAccess.getOptionAccess().getExpressionListAssignment_3(), "rule__Option__ExpressionListAssignment_3");
			builder.put(grammarAccess.getPropertyArgumentsAccess().getArgumentsAssignment_2(), "rule__PropertyArguments__ArgumentsAssignment_2");
			builder.put(grammarAccess.getPropertyArgumentsAccess().getArgumentsAssignment_3_1(), "rule__PropertyArguments__ArgumentsAssignment_3_1");
			builder.put(grammarAccess.getLengthArgumentAccess().getValueAssignment_2(), "rule__LengthArgument__ValueAssignment_2");
			builder.put(grammarAccess.getDirectionArgumentAccess().getValueAssignment_2(), "rule__DirectionArgument__ValueAssignment_2");
			builder.put(grammarAccess.getDescriptionArgumentAccess().getValueAssignment_2(), "rule__DescriptionArgument__ValueAssignment_2");
			builder.put(grammarAccess.getCardinalityArgumentAccess().getValueAssignment_2(), "rule__CardinalityArgument__ValueAssignment_2");
			builder.put(grammarAccess.getTypeArgumentAccess().getValueAssignment_2(), "rule__TypeArgument__ValueAssignment_2");
			builder.put(grammarAccess.getSubTypeArgumentAccess().getValueAssignment_2(), "rule__SubTypeArgument__ValueAssignment_2");
			builder.put(grammarAccess.getConditionalExpressionsAccess().getConditionalExpressionsAssignment_0_1(), "rule__ConditionalExpressions__ConditionalExpressionsAssignment_0_1");
			builder.put(grammarAccess.getConditionalExpressionsAccess().getElseExpresssionAssignment_0_3(), "rule__ConditionalExpressions__ElseExpresssionAssignment_0_3");
			builder.put(grammarAccess.getConditionalExpressionsAccess().getSingleExpressionAssignment_1(), "rule__ConditionalExpressions__SingleExpressionAssignment_1");
			builder.put(grammarAccess.getConditionalExpressionAccess().getConditionAssignment_1(), "rule__ConditionalExpression__ConditionAssignment_1");
			builder.put(grammarAccess.getConditionalExpressionAccess().getExpressionAssignment_3(), "rule__ConditionalExpression__ExpressionAssignment_3");
			builder.put(grammarAccess.getBooleanExpressionAccess().getOpAssignment_1_0_1(), "rule__BooleanExpression__OpAssignment_1_0_1");
			builder.put(grammarAccess.getBooleanExpressionAccess().getRightAssignment_1_1(), "rule__BooleanExpression__RightAssignment_1_1");
			builder.put(grammarAccess.getComparisonAccess().getOpAssignment_1_0_1(), "rule__Comparison__OpAssignment_1_0_1");
			builder.put(grammarAccess.getComparisonAccess().getRightAssignment_1_1(), "rule__Comparison__RightAssignment_1_1");
			builder.put(grammarAccess.getEqualsAccess().getOpAssignment_1_0_1(), "rule__Equals__OpAssignment_1_0_1");
			builder.put(grammarAccess.getEqualsAccess().getRightAssignment_1_1(), "rule__Equals__RightAssignment_1_1");
			builder.put(grammarAccess.getAdditionAccess().getRightAssignment_1_1(), "rule__Addition__RightAssignment_1_1");
			builder.put(grammarAccess.getMultiplicationAccess().getOpAssignment_1_0_1(), "rule__Multiplication__OpAssignment_1_0_1");
			builder.put(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1(), "rule__Multiplication__RightAssignment_1_1");
			builder.put(grammarAccess.getPrefixedAccess().getExpressionAssignment_0_2(), "rule__Prefixed__ExpressionAssignment_0_2");
			builder.put(grammarAccess.getPrefixedAccess().getExpressionAssignment_1_2(), "rule__Prefixed__ExpressionAssignment_1_2");
			builder.put(grammarAccess.getAtomicAccess().getValueAssignment_0_2(), "rule__Atomic__ValueAssignment_0_2");
			builder.put(grammarAccess.getAtomicAccess().getValueAssignment_1_1(), "rule__Atomic__ValueAssignment_1_1");
			builder.put(grammarAccess.getAtomicAccess().getValueAssignment_2_1(), "rule__Atomic__ValueAssignment_2_1");
			builder.put(grammarAccess.getAtomicAccess().getValueAssignment_3_1(), "rule__Atomic__ValueAssignment_3_1");
			builder.put(grammarAccess.getAtomicAccess().getValueAssignment_4_1(), "rule__Atomic__ValueAssignment_4_1");
			builder.put(grammarAccess.getAtomicAccess().getValueAssignment_5_1(), "rule__Atomic__ValueAssignment_5_1");
			builder.put(grammarAccess.getAtomicAccess().getHasExistsAssignment_6_1(), "rule__Atomic__HasExistsAssignment_6_1");
			builder.put(grammarAccess.getAtomicAccess().getValueAssignment_6_2(), "rule__Atomic__ValueAssignment_6_2");
			builder.put(grammarAccess.getAtomicAccess().getValueAssignment_7_1(), "rule__Atomic__ValueAssignment_7_1");
			builder.put(grammarAccess.getAtomicAccess().getValueAssignment_8_1(), "rule__Atomic__ValueAssignment_8_1");
			builder.put(grammarAccess.getAtomicAccess().getValueAssignment_9_1(), "rule__Atomic__ValueAssignment_9_1");
			builder.put(grammarAccess.getAtomicAccess().getValueAssignment_10_1(), "rule__Atomic__ValueAssignment_10_1");
			builder.put(grammarAccess.getForAllIdentifierAccess().getOpAssignment_1(), "rule__ForAllIdentifier__OpAssignment_1");
			builder.put(grammarAccess.getForAllIdentifierAccess().getExpressionAssignment_4(), "rule__ForAllIdentifier__ExpressionAssignment_4");
			builder.put(grammarAccess.getForAllIdentifierAccess().getMessagedefinitionAssignment_7(), "rule__ForAllIdentifier__MessagedefinitionAssignment_7");
			builder.put(grammarAccess.getFunctionIdentifierAccess().getFuncAssignment_1(), "rule__FunctionIdentifier__FuncAssignment_1");
			builder.put(grammarAccess.getFunctionIdentifierAccess().getArgsAssignment_2_1_0(), "rule__FunctionIdentifier__ArgsAssignment_2_1_0");
			builder.put(grammarAccess.getFunctionIdentifierAccess().getArgsAssignment_2_1_1_1(), "rule__FunctionIdentifier__ArgsAssignment_2_1_1_1");
			builder.put(grammarAccess.getMappableIdentifierAccess().getFieldAssignment_1(), "rule__MappableIdentifier__FieldAssignment_1");
			builder.put(grammarAccess.getMappableIdentifierAccess().getArgsAssignment_2_1_0(), "rule__MappableIdentifier__ArgsAssignment_2_1_0");
			builder.put(grammarAccess.getMappableIdentifierAccess().getArgsAssignment_2_1_1_1(), "rule__MappableIdentifier__ArgsAssignment_2_1_1_1");
			builder.put(grammarAccess.getTmlIdentifierAccess().getTmlAssignment_1(), "rule__TmlIdentifier__TmlAssignment_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private NavascriptGrammarAccess grammarAccess;

	@Override
	protected InternalNavascriptParser createParser() {
		InternalNavascriptParser result = new InternalNavascriptParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public NavascriptGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(NavascriptGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
