/*
 * generated by Xtext 2.24.0
 */
package com.dexels.navajo.formatting2;

import com.dexels.navajo.navascript.Navascript;
import com.dexels.navajo.navascript.TopLevelStatement;
import com.dexels.navajo.navascript.TopLevelStatements;
import org.eclipse.xtext.formatting2.AbstractJavaFormatter;
import org.eclipse.xtext.formatting2.IFormattableDocument;

public class NavascriptFormatter extends AbstractJavaFormatter {

	protected void format(Navascript navascript, IFormattableDocument doc) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		doc.format(navascript.getValidations());
		doc.append(regionFor(navascript.getValidations()).keyword("}"), it -> it.setNewLines(2));
		doc.format(navascript.getToplevelStatements());
		doc.format(navascript.getFinally());
	}

	protected void format(TopLevelStatements topLevelStatements, IFormattableDocument doc) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (TopLevelStatement topLevelStatement : topLevelStatements.getStatements()) {
			doc.format(topLevelStatement);
		}
	}
	
	// TODO: implement for TopLevelStatement, InnerBody, BlockStatements, Synchronized, SynchronizedArguments, Break, BreakParameter, BreakParameters, Validations, Define, Check, CheckAttribute, LiteralOrExpression, Print, Log, Finally, Loop, Message, MessageArray, MessageArrayElement, MessageArguments, Map, AdapterMethod, SetterField, MappedArrayField, MappedArrayMessage, KeyValueArguments, KeyValueArgument, Var, VarArray, VarArrayElement, VarElement, VarArguments, VarArgument, VarType, VarMode, Property, SelectionArray, SelectionArrayElement, Option, PropertyArguments, DescriptionArgument, TypeArgument, ConditionalExpressions, ConditionalExpression, AndOrExpression, Comparison, Equals, MultiOrDiv, BooleanNegation, ArithmeticSigned, ExpressionLiteral, FunctionCallLiteral, MappableIdentifierLiteral, TmlIdentifierLiteral, ForAllLiteral, ForAllIdentifier, FunctionIdentifier, MappableIdentifier, Plus, Minus
}
