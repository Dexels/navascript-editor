/**
 * generated by Xtext 2.24.0
 */
package com.dexels.navajo.navascript.impl;

import com.dexels.navajo.navascript.InnerBody;
import com.dexels.navajo.navascript.MappedArrayField;
import com.dexels.navajo.navascript.MappedArrayMessage;
import com.dexels.navajo.navascript.Message;
import com.dexels.navajo.navascript.MessageArguments;
import com.dexels.navajo.navascript.MessageArray;
import com.dexels.navajo.navascript.NavascriptPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Message</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.dexels.navajo.navascript.impl.MessageImpl#getMessageName <em>Message Name</em>}</li>
 *   <li>{@link com.dexels.navajo.navascript.impl.MessageImpl#getArguments <em>Arguments</em>}</li>
 *   <li>{@link com.dexels.navajo.navascript.impl.MessageImpl#getStatements <em>Statements</em>}</li>
 *   <li>{@link com.dexels.navajo.navascript.impl.MessageImpl#getArrayField <em>Array Field</em>}</li>
 *   <li>{@link com.dexels.navajo.navascript.impl.MessageImpl#getArrayMessage <em>Array Message</em>}</li>
 *   <li>{@link com.dexels.navajo.navascript.impl.MessageImpl#getMessageArray <em>Message Array</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MessageImpl extends MinimalEObjectImpl.Container implements Message
{
  /**
   * The default value of the '{@link #getMessageName() <em>Message Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMessageName()
   * @generated
   * @ordered
   */
  protected static final String MESSAGE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMessageName() <em>Message Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMessageName()
   * @generated
   * @ordered
   */
  protected String messageName = MESSAGE_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getArguments() <em>Arguments</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArguments()
   * @generated
   * @ordered
   */
  protected MessageArguments arguments;

  /**
   * The cached value of the '{@link #getStatements() <em>Statements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatements()
   * @generated
   * @ordered
   */
  protected EList<InnerBody> statements;

  /**
   * The cached value of the '{@link #getArrayField() <em>Array Field</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArrayField()
   * @generated
   * @ordered
   */
  protected MappedArrayField arrayField;

  /**
   * The cached value of the '{@link #getArrayMessage() <em>Array Message</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArrayMessage()
   * @generated
   * @ordered
   */
  protected MappedArrayMessage arrayMessage;

  /**
   * The cached value of the '{@link #getMessageArray() <em>Message Array</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMessageArray()
   * @generated
   * @ordered
   */
  protected MessageArray messageArray;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MessageImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return NavascriptPackage.Literals.MESSAGE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getMessageName()
  {
    return messageName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMessageName(String newMessageName)
  {
    String oldMessageName = messageName;
    messageName = newMessageName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NavascriptPackage.MESSAGE__MESSAGE_NAME, oldMessageName, messageName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MessageArguments getArguments()
  {
    return arguments;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetArguments(MessageArguments newArguments, NotificationChain msgs)
  {
    MessageArguments oldArguments = arguments;
    arguments = newArguments;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NavascriptPackage.MESSAGE__ARGUMENTS, oldArguments, newArguments);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArguments(MessageArguments newArguments)
  {
    if (newArguments != arguments)
    {
      NotificationChain msgs = null;
      if (arguments != null)
        msgs = ((InternalEObject)arguments).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.MESSAGE__ARGUMENTS, null, msgs);
      if (newArguments != null)
        msgs = ((InternalEObject)newArguments).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.MESSAGE__ARGUMENTS, null, msgs);
      msgs = basicSetArguments(newArguments, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NavascriptPackage.MESSAGE__ARGUMENTS, newArguments, newArguments));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<InnerBody> getStatements()
  {
    if (statements == null)
    {
      statements = new EObjectContainmentEList<InnerBody>(InnerBody.class, this, NavascriptPackage.MESSAGE__STATEMENTS);
    }
    return statements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MappedArrayField getArrayField()
  {
    return arrayField;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetArrayField(MappedArrayField newArrayField, NotificationChain msgs)
  {
    MappedArrayField oldArrayField = arrayField;
    arrayField = newArrayField;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NavascriptPackage.MESSAGE__ARRAY_FIELD, oldArrayField, newArrayField);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArrayField(MappedArrayField newArrayField)
  {
    if (newArrayField != arrayField)
    {
      NotificationChain msgs = null;
      if (arrayField != null)
        msgs = ((InternalEObject)arrayField).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.MESSAGE__ARRAY_FIELD, null, msgs);
      if (newArrayField != null)
        msgs = ((InternalEObject)newArrayField).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.MESSAGE__ARRAY_FIELD, null, msgs);
      msgs = basicSetArrayField(newArrayField, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NavascriptPackage.MESSAGE__ARRAY_FIELD, newArrayField, newArrayField));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MappedArrayMessage getArrayMessage()
  {
    return arrayMessage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetArrayMessage(MappedArrayMessage newArrayMessage, NotificationChain msgs)
  {
    MappedArrayMessage oldArrayMessage = arrayMessage;
    arrayMessage = newArrayMessage;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NavascriptPackage.MESSAGE__ARRAY_MESSAGE, oldArrayMessage, newArrayMessage);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArrayMessage(MappedArrayMessage newArrayMessage)
  {
    if (newArrayMessage != arrayMessage)
    {
      NotificationChain msgs = null;
      if (arrayMessage != null)
        msgs = ((InternalEObject)arrayMessage).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.MESSAGE__ARRAY_MESSAGE, null, msgs);
      if (newArrayMessage != null)
        msgs = ((InternalEObject)newArrayMessage).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.MESSAGE__ARRAY_MESSAGE, null, msgs);
      msgs = basicSetArrayMessage(newArrayMessage, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NavascriptPackage.MESSAGE__ARRAY_MESSAGE, newArrayMessage, newArrayMessage));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MessageArray getMessageArray()
  {
    return messageArray;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMessageArray(MessageArray newMessageArray, NotificationChain msgs)
  {
    MessageArray oldMessageArray = messageArray;
    messageArray = newMessageArray;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NavascriptPackage.MESSAGE__MESSAGE_ARRAY, oldMessageArray, newMessageArray);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMessageArray(MessageArray newMessageArray)
  {
    if (newMessageArray != messageArray)
    {
      NotificationChain msgs = null;
      if (messageArray != null)
        msgs = ((InternalEObject)messageArray).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.MESSAGE__MESSAGE_ARRAY, null, msgs);
      if (newMessageArray != null)
        msgs = ((InternalEObject)newMessageArray).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.MESSAGE__MESSAGE_ARRAY, null, msgs);
      msgs = basicSetMessageArray(newMessageArray, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NavascriptPackage.MESSAGE__MESSAGE_ARRAY, newMessageArray, newMessageArray));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case NavascriptPackage.MESSAGE__ARGUMENTS:
        return basicSetArguments(null, msgs);
      case NavascriptPackage.MESSAGE__STATEMENTS:
        return ((InternalEList<?>)getStatements()).basicRemove(otherEnd, msgs);
      case NavascriptPackage.MESSAGE__ARRAY_FIELD:
        return basicSetArrayField(null, msgs);
      case NavascriptPackage.MESSAGE__ARRAY_MESSAGE:
        return basicSetArrayMessage(null, msgs);
      case NavascriptPackage.MESSAGE__MESSAGE_ARRAY:
        return basicSetMessageArray(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case NavascriptPackage.MESSAGE__MESSAGE_NAME:
        return getMessageName();
      case NavascriptPackage.MESSAGE__ARGUMENTS:
        return getArguments();
      case NavascriptPackage.MESSAGE__STATEMENTS:
        return getStatements();
      case NavascriptPackage.MESSAGE__ARRAY_FIELD:
        return getArrayField();
      case NavascriptPackage.MESSAGE__ARRAY_MESSAGE:
        return getArrayMessage();
      case NavascriptPackage.MESSAGE__MESSAGE_ARRAY:
        return getMessageArray();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case NavascriptPackage.MESSAGE__MESSAGE_NAME:
        setMessageName((String)newValue);
        return;
      case NavascriptPackage.MESSAGE__ARGUMENTS:
        setArguments((MessageArguments)newValue);
        return;
      case NavascriptPackage.MESSAGE__STATEMENTS:
        getStatements().clear();
        getStatements().addAll((Collection<? extends InnerBody>)newValue);
        return;
      case NavascriptPackage.MESSAGE__ARRAY_FIELD:
        setArrayField((MappedArrayField)newValue);
        return;
      case NavascriptPackage.MESSAGE__ARRAY_MESSAGE:
        setArrayMessage((MappedArrayMessage)newValue);
        return;
      case NavascriptPackage.MESSAGE__MESSAGE_ARRAY:
        setMessageArray((MessageArray)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case NavascriptPackage.MESSAGE__MESSAGE_NAME:
        setMessageName(MESSAGE_NAME_EDEFAULT);
        return;
      case NavascriptPackage.MESSAGE__ARGUMENTS:
        setArguments((MessageArguments)null);
        return;
      case NavascriptPackage.MESSAGE__STATEMENTS:
        getStatements().clear();
        return;
      case NavascriptPackage.MESSAGE__ARRAY_FIELD:
        setArrayField((MappedArrayField)null);
        return;
      case NavascriptPackage.MESSAGE__ARRAY_MESSAGE:
        setArrayMessage((MappedArrayMessage)null);
        return;
      case NavascriptPackage.MESSAGE__MESSAGE_ARRAY:
        setMessageArray((MessageArray)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case NavascriptPackage.MESSAGE__MESSAGE_NAME:
        return MESSAGE_NAME_EDEFAULT == null ? messageName != null : !MESSAGE_NAME_EDEFAULT.equals(messageName);
      case NavascriptPackage.MESSAGE__ARGUMENTS:
        return arguments != null;
      case NavascriptPackage.MESSAGE__STATEMENTS:
        return statements != null && !statements.isEmpty();
      case NavascriptPackage.MESSAGE__ARRAY_FIELD:
        return arrayField != null;
      case NavascriptPackage.MESSAGE__ARRAY_MESSAGE:
        return arrayMessage != null;
      case NavascriptPackage.MESSAGE__MESSAGE_ARRAY:
        return messageArray != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (messageName: ");
    result.append(messageName);
    result.append(')');
    return result.toString();
  }

} //MessageImpl
