/**
 * generated by Xtext 2.24.0
 */
package com.dexels.navajo.navascript.impl;

import com.dexels.navajo.navascript.ConditionalExpressions;
import com.dexels.navajo.navascript.MappedArrayField;
import com.dexels.navajo.navascript.MappedArrayMessage;
import com.dexels.navajo.navascript.NavascriptPackage;
import com.dexels.navajo.navascript.SetterField;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Setter Field</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.dexels.navajo.navascript.impl.SetterFieldImpl#getField <em>Field</em>}</li>
 *   <li>{@link com.dexels.navajo.navascript.impl.SetterFieldImpl#getExpressionList <em>Expression List</em>}</li>
 *   <li>{@link com.dexels.navajo.navascript.impl.SetterFieldImpl#getMappedArray <em>Mapped Array</em>}</li>
 *   <li>{@link com.dexels.navajo.navascript.impl.SetterFieldImpl#getMappedField <em>Mapped Field</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SetterFieldImpl extends MethodOrSetterImpl implements SetterField
{
  /**
   * The default value of the '{@link #getField() <em>Field</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getField()
   * @generated
   * @ordered
   */
  protected static final String FIELD_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getField() <em>Field</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getField()
   * @generated
   * @ordered
   */
  protected String field = FIELD_EDEFAULT;

  /**
   * The cached value of the '{@link #getExpressionList() <em>Expression List</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpressionList()
   * @generated
   * @ordered
   */
  protected ConditionalExpressions expressionList;

  /**
   * The cached value of the '{@link #getMappedArray() <em>Mapped Array</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMappedArray()
   * @generated
   * @ordered
   */
  protected MappedArrayMessage mappedArray;

  /**
   * The cached value of the '{@link #getMappedField() <em>Mapped Field</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMappedField()
   * @generated
   * @ordered
   */
  protected MappedArrayField mappedField;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SetterFieldImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return NavascriptPackage.Literals.SETTER_FIELD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getField()
  {
    return field;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setField(String newField)
  {
    String oldField = field;
    field = newField;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NavascriptPackage.SETTER_FIELD__FIELD, oldField, field));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ConditionalExpressions getExpressionList()
  {
    return expressionList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpressionList(ConditionalExpressions newExpressionList, NotificationChain msgs)
  {
    ConditionalExpressions oldExpressionList = expressionList;
    expressionList = newExpressionList;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NavascriptPackage.SETTER_FIELD__EXPRESSION_LIST, oldExpressionList, newExpressionList);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExpressionList(ConditionalExpressions newExpressionList)
  {
    if (newExpressionList != expressionList)
    {
      NotificationChain msgs = null;
      if (expressionList != null)
        msgs = ((InternalEObject)expressionList).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.SETTER_FIELD__EXPRESSION_LIST, null, msgs);
      if (newExpressionList != null)
        msgs = ((InternalEObject)newExpressionList).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.SETTER_FIELD__EXPRESSION_LIST, null, msgs);
      msgs = basicSetExpressionList(newExpressionList, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NavascriptPackage.SETTER_FIELD__EXPRESSION_LIST, newExpressionList, newExpressionList));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MappedArrayMessage getMappedArray()
  {
    return mappedArray;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMappedArray(MappedArrayMessage newMappedArray, NotificationChain msgs)
  {
    MappedArrayMessage oldMappedArray = mappedArray;
    mappedArray = newMappedArray;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NavascriptPackage.SETTER_FIELD__MAPPED_ARRAY, oldMappedArray, newMappedArray);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMappedArray(MappedArrayMessage newMappedArray)
  {
    if (newMappedArray != mappedArray)
    {
      NotificationChain msgs = null;
      if (mappedArray != null)
        msgs = ((InternalEObject)mappedArray).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.SETTER_FIELD__MAPPED_ARRAY, null, msgs);
      if (newMappedArray != null)
        msgs = ((InternalEObject)newMappedArray).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.SETTER_FIELD__MAPPED_ARRAY, null, msgs);
      msgs = basicSetMappedArray(newMappedArray, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NavascriptPackage.SETTER_FIELD__MAPPED_ARRAY, newMappedArray, newMappedArray));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MappedArrayField getMappedField()
  {
    return mappedField;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMappedField(MappedArrayField newMappedField, NotificationChain msgs)
  {
    MappedArrayField oldMappedField = mappedField;
    mappedField = newMappedField;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NavascriptPackage.SETTER_FIELD__MAPPED_FIELD, oldMappedField, newMappedField);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMappedField(MappedArrayField newMappedField)
  {
    if (newMappedField != mappedField)
    {
      NotificationChain msgs = null;
      if (mappedField != null)
        msgs = ((InternalEObject)mappedField).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.SETTER_FIELD__MAPPED_FIELD, null, msgs);
      if (newMappedField != null)
        msgs = ((InternalEObject)newMappedField).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.SETTER_FIELD__MAPPED_FIELD, null, msgs);
      msgs = basicSetMappedField(newMappedField, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NavascriptPackage.SETTER_FIELD__MAPPED_FIELD, newMappedField, newMappedField));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case NavascriptPackage.SETTER_FIELD__EXPRESSION_LIST:
        return basicSetExpressionList(null, msgs);
      case NavascriptPackage.SETTER_FIELD__MAPPED_ARRAY:
        return basicSetMappedArray(null, msgs);
      case NavascriptPackage.SETTER_FIELD__MAPPED_FIELD:
        return basicSetMappedField(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case NavascriptPackage.SETTER_FIELD__FIELD:
        return getField();
      case NavascriptPackage.SETTER_FIELD__EXPRESSION_LIST:
        return getExpressionList();
      case NavascriptPackage.SETTER_FIELD__MAPPED_ARRAY:
        return getMappedArray();
      case NavascriptPackage.SETTER_FIELD__MAPPED_FIELD:
        return getMappedField();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case NavascriptPackage.SETTER_FIELD__FIELD:
        setField((String)newValue);
        return;
      case NavascriptPackage.SETTER_FIELD__EXPRESSION_LIST:
        setExpressionList((ConditionalExpressions)newValue);
        return;
      case NavascriptPackage.SETTER_FIELD__MAPPED_ARRAY:
        setMappedArray((MappedArrayMessage)newValue);
        return;
      case NavascriptPackage.SETTER_FIELD__MAPPED_FIELD:
        setMappedField((MappedArrayField)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case NavascriptPackage.SETTER_FIELD__FIELD:
        setField(FIELD_EDEFAULT);
        return;
      case NavascriptPackage.SETTER_FIELD__EXPRESSION_LIST:
        setExpressionList((ConditionalExpressions)null);
        return;
      case NavascriptPackage.SETTER_FIELD__MAPPED_ARRAY:
        setMappedArray((MappedArrayMessage)null);
        return;
      case NavascriptPackage.SETTER_FIELD__MAPPED_FIELD:
        setMappedField((MappedArrayField)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case NavascriptPackage.SETTER_FIELD__FIELD:
        return FIELD_EDEFAULT == null ? field != null : !FIELD_EDEFAULT.equals(field);
      case NavascriptPackage.SETTER_FIELD__EXPRESSION_LIST:
        return expressionList != null;
      case NavascriptPackage.SETTER_FIELD__MAPPED_ARRAY:
        return mappedArray != null;
      case NavascriptPackage.SETTER_FIELD__MAPPED_FIELD:
        return mappedField != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (field: ");
    result.append(field);
    result.append(')');
    return result.toString();
  }

} //SetterFieldImpl
