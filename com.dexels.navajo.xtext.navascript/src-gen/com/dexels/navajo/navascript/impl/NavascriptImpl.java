/**
 * generated by Xtext 2.24.0
 */
package com.dexels.navajo.navascript.impl;

import com.dexels.navajo.navascript.DebugStatement;
import com.dexels.navajo.navascript.Finally;
import com.dexels.navajo.navascript.Navascript;
import com.dexels.navajo.navascript.NavascriptPackage;
import com.dexels.navajo.navascript.TopLevelStatements;
import com.dexels.navajo.navascript.Validations;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Navascript</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.dexels.navajo.navascript.impl.NavascriptImpl#getDebug <em>Debug</em>}</li>
 *   <li>{@link com.dexels.navajo.navascript.impl.NavascriptImpl#getValidations <em>Validations</em>}</li>
 *   <li>{@link com.dexels.navajo.navascript.impl.NavascriptImpl#getToplevelStatements <em>Toplevel Statements</em>}</li>
 *   <li>{@link com.dexels.navajo.navascript.impl.NavascriptImpl#getFinally <em>Finally</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NavascriptImpl extends MinimalEObjectImpl.Container implements Navascript
{
  /**
   * The cached value of the '{@link #getDebug() <em>Debug</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDebug()
   * @generated
   * @ordered
   */
  protected DebugStatement debug;

  /**
   * The cached value of the '{@link #getValidations() <em>Validations</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValidations()
   * @generated
   * @ordered
   */
  protected Validations validations;

  /**
   * The cached value of the '{@link #getToplevelStatements() <em>Toplevel Statements</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getToplevelStatements()
   * @generated
   * @ordered
   */
  protected TopLevelStatements toplevelStatements;

  /**
   * The cached value of the '{@link #getFinally() <em>Finally</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFinally()
   * @generated
   * @ordered
   */
  protected Finally finally_;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NavascriptImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return NavascriptPackage.Literals.NAVASCRIPT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DebugStatement getDebug()
  {
    return debug;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDebug(DebugStatement newDebug, NotificationChain msgs)
  {
    DebugStatement oldDebug = debug;
    debug = newDebug;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NavascriptPackage.NAVASCRIPT__DEBUG, oldDebug, newDebug);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDebug(DebugStatement newDebug)
  {
    if (newDebug != debug)
    {
      NotificationChain msgs = null;
      if (debug != null)
        msgs = ((InternalEObject)debug).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.NAVASCRIPT__DEBUG, null, msgs);
      if (newDebug != null)
        msgs = ((InternalEObject)newDebug).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.NAVASCRIPT__DEBUG, null, msgs);
      msgs = basicSetDebug(newDebug, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NavascriptPackage.NAVASCRIPT__DEBUG, newDebug, newDebug));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Validations getValidations()
  {
    return validations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetValidations(Validations newValidations, NotificationChain msgs)
  {
    Validations oldValidations = validations;
    validations = newValidations;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NavascriptPackage.NAVASCRIPT__VALIDATIONS, oldValidations, newValidations);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setValidations(Validations newValidations)
  {
    if (newValidations != validations)
    {
      NotificationChain msgs = null;
      if (validations != null)
        msgs = ((InternalEObject)validations).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.NAVASCRIPT__VALIDATIONS, null, msgs);
      if (newValidations != null)
        msgs = ((InternalEObject)newValidations).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.NAVASCRIPT__VALIDATIONS, null, msgs);
      msgs = basicSetValidations(newValidations, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NavascriptPackage.NAVASCRIPT__VALIDATIONS, newValidations, newValidations));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TopLevelStatements getToplevelStatements()
  {
    return toplevelStatements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetToplevelStatements(TopLevelStatements newToplevelStatements, NotificationChain msgs)
  {
    TopLevelStatements oldToplevelStatements = toplevelStatements;
    toplevelStatements = newToplevelStatements;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NavascriptPackage.NAVASCRIPT__TOPLEVEL_STATEMENTS, oldToplevelStatements, newToplevelStatements);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setToplevelStatements(TopLevelStatements newToplevelStatements)
  {
    if (newToplevelStatements != toplevelStatements)
    {
      NotificationChain msgs = null;
      if (toplevelStatements != null)
        msgs = ((InternalEObject)toplevelStatements).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.NAVASCRIPT__TOPLEVEL_STATEMENTS, null, msgs);
      if (newToplevelStatements != null)
        msgs = ((InternalEObject)newToplevelStatements).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.NAVASCRIPT__TOPLEVEL_STATEMENTS, null, msgs);
      msgs = basicSetToplevelStatements(newToplevelStatements, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NavascriptPackage.NAVASCRIPT__TOPLEVEL_STATEMENTS, newToplevelStatements, newToplevelStatements));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Finally getFinally()
  {
    return finally_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFinally(Finally newFinally, NotificationChain msgs)
  {
    Finally oldFinally = finally_;
    finally_ = newFinally;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NavascriptPackage.NAVASCRIPT__FINALLY, oldFinally, newFinally);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFinally(Finally newFinally)
  {
    if (newFinally != finally_)
    {
      NotificationChain msgs = null;
      if (finally_ != null)
        msgs = ((InternalEObject)finally_).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.NAVASCRIPT__FINALLY, null, msgs);
      if (newFinally != null)
        msgs = ((InternalEObject)newFinally).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NavascriptPackage.NAVASCRIPT__FINALLY, null, msgs);
      msgs = basicSetFinally(newFinally, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NavascriptPackage.NAVASCRIPT__FINALLY, newFinally, newFinally));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case NavascriptPackage.NAVASCRIPT__DEBUG:
        return basicSetDebug(null, msgs);
      case NavascriptPackage.NAVASCRIPT__VALIDATIONS:
        return basicSetValidations(null, msgs);
      case NavascriptPackage.NAVASCRIPT__TOPLEVEL_STATEMENTS:
        return basicSetToplevelStatements(null, msgs);
      case NavascriptPackage.NAVASCRIPT__FINALLY:
        return basicSetFinally(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case NavascriptPackage.NAVASCRIPT__DEBUG:
        return getDebug();
      case NavascriptPackage.NAVASCRIPT__VALIDATIONS:
        return getValidations();
      case NavascriptPackage.NAVASCRIPT__TOPLEVEL_STATEMENTS:
        return getToplevelStatements();
      case NavascriptPackage.NAVASCRIPT__FINALLY:
        return getFinally();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case NavascriptPackage.NAVASCRIPT__DEBUG:
        setDebug((DebugStatement)newValue);
        return;
      case NavascriptPackage.NAVASCRIPT__VALIDATIONS:
        setValidations((Validations)newValue);
        return;
      case NavascriptPackage.NAVASCRIPT__TOPLEVEL_STATEMENTS:
        setToplevelStatements((TopLevelStatements)newValue);
        return;
      case NavascriptPackage.NAVASCRIPT__FINALLY:
        setFinally((Finally)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case NavascriptPackage.NAVASCRIPT__DEBUG:
        setDebug((DebugStatement)null);
        return;
      case NavascriptPackage.NAVASCRIPT__VALIDATIONS:
        setValidations((Validations)null);
        return;
      case NavascriptPackage.NAVASCRIPT__TOPLEVEL_STATEMENTS:
        setToplevelStatements((TopLevelStatements)null);
        return;
      case NavascriptPackage.NAVASCRIPT__FINALLY:
        setFinally((Finally)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case NavascriptPackage.NAVASCRIPT__DEBUG:
        return debug != null;
      case NavascriptPackage.NAVASCRIPT__VALIDATIONS:
        return validations != null;
      case NavascriptPackage.NAVASCRIPT__TOPLEVEL_STATEMENTS:
        return toplevelStatements != null;
      case NavascriptPackage.NAVASCRIPT__FINALLY:
        return finally_ != null;
    }
    return super.eIsSet(featureID);
  }

} //NavascriptImpl
